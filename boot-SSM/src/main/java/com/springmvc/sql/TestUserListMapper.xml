<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.dao.TestUserListMapper" >
  <resultMap id="BaseResultMap" type="com.springmvc.entity.UserList" >
    <constructor >
      <idArg column="u_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="u_UserName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="u_Name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="u_PassWord" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="u_PhoneNumber" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="u_Sex" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="u_Age" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    u_id, u_UserName, u_Name, u_PassWord, u_PhoneNumber, u_Sex, u_Age
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from u_user_list
    where u_id = #{uId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from u_user_list
    where u_id = #{uId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springmvc.entity.UserList" >
    insert into u_user_list (u_id, u_UserName, u_Name, 
      u_PassWord, u_PhoneNumber, u_Sex, 
      u_Age)
    values (#{uId,jdbcType=INTEGER}, #{uUsername,jdbcType=VARCHAR}, #{uName,jdbcType=VARCHAR}, 
      #{uPassword,jdbcType=VARCHAR}, #{uPhonenumber,jdbcType=VARCHAR}, #{uSex,jdbcType=VARCHAR}, 
      #{uAge,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.springmvc.entity.UserList" >
    insert into u_user_list
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uId != null" >
        u_id,
      </if>
      <if test="uUsername != null" >
        u_UserName,
      </if>
      <if test="uName != null" >
        u_Name,
      </if>
      <if test="uPassword != null" >
        u_PassWord,
      </if>
      <if test="uPhonenumber != null" >
        u_PhoneNumber,
      </if>
      <if test="uSex != null" >
        u_Sex,
      </if>
      <if test="uAge != null" >
        u_Age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uId != null" >
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="uUsername != null" >
        #{uUsername,jdbcType=VARCHAR},
      </if>
      <if test="uName != null" >
        #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uPassword != null" >
        #{uPassword,jdbcType=VARCHAR},
      </if>
      <if test="uPhonenumber != null" >
        #{uPhonenumber,jdbcType=VARCHAR},
      </if>
      <if test="uSex != null" >
        #{uSex,jdbcType=VARCHAR},
      </if>
      <if test="uAge != null" >
        #{uAge,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.entity.UserList" >
    update u_user_list
    <set >
      <if test="uUsername != null" >
        u_UserName = #{uUsername,jdbcType=VARCHAR},
      </if>
      <if test="uName != null" >
        u_Name = #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uPassword != null" >
        u_PassWord = #{uPassword,jdbcType=VARCHAR},
      </if>
      <if test="uPhonenumber != null" >
        u_PhoneNumber = #{uPhonenumber,jdbcType=VARCHAR},
      </if>
      <if test="uSex != null" >
        u_Sex = #{uSex,jdbcType=VARCHAR},
      </if>
      <if test="uAge != null" >
        u_Age = #{uAge,jdbcType=VARCHAR},
      </if>
    </set>
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.entity.UserList" >
    update u_user_list
    set u_UserName = #{uUsername,jdbcType=VARCHAR},
      u_Name = #{uName,jdbcType=VARCHAR},
      u_PassWord = #{uPassword,jdbcType=VARCHAR},
      u_PhoneNumber = #{uPhonenumber,jdbcType=VARCHAR},
      u_Sex = #{uSex,jdbcType=VARCHAR},
      u_Age = #{uAge,jdbcType=VARCHAR}
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
</mapper>