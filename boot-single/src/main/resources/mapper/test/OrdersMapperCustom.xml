<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace ：命名空间，对 sql 进行分类化管理，用于隔离 sql 语句
注意：如果mapper代理方法开发，namespace有重要作用
在 xxxmapper.xml 中 namespace 等于 mapper 接口地址
-->
<mapper namespace="com.xzm.modules.test.dao.OrdersMapperCustom">

    <!--&lt;!&ndash;定义查询订单关联查询用户信息的resultMap-->
        <!--将整个查询结果映射到cn.zhisheng.mybatis.po.Orders-->
    <!--&ndash;&gt;-->
    <!--<resultMap id="OrdersUserResultMap" type="com.xzm.modules.test.po.Orders">-->
        <!--&lt;!&ndash;配置映射的订单信息&ndash;&gt;-->
        <!--&lt;!&ndash;id表示查询结果中的唯一标识  在这里是订单的唯一标识  如果是由多列组成的唯一标识，那么就需要配置多个id-->
        <!--column：id 是订单信息中的唯一标识列-->
        <!--property：id 是订单信息唯一标识列所映射到orders中的id属性-->
        <!--最终resultMap对column和property做一个映射关系（对应关系）-->
        <!--&ndash;&gt;-->
        <!--<id column="id" property="id"/>-->
        <!--<result column="user_id" property="userId"/>-->
        <!--<result column="number" property="number"/>-->
        <!--<result column="createtime" property="createtime"/>-->
        <!--<result column="note" property="note"/>-->

        <!--&lt;!&ndash;配置映射的关联用户信息-->
            <!--association 用于映射关联查询单个对象的信息-->
            <!--property  将要关联查询的用户信息映射到 orders中的属性中去-->
        <!--&ndash;&gt;-->
        <!--<association property="user" javaType="com.xzm.modules.test.po.User">-->
            <!--&lt;!&ndash;id 关联用户信息的唯一标识-->
                <!--column: 指定唯一标识用户的信息-->
                <!--property：映射到user的那个属性-->
            <!--&ndash;&gt;-->
            <!--<id column="user_id" property="id"/>-->
            <!--<result column="username" property="username"/>-->
            <!--<result column="sex" property="sex"/>-->
            <!--<result column="address" property="address"/>-->
            <!--<result column="birthday" property="birthday"/>-->
        <!--</association>-->
    <!--</resultMap>-->


    <!--&lt;!&ndash;定义查询订单及订单明细信息的 resultMap-->
        <!--使用extends继承，不用在中配置订单信息和用户信息的映射-->
    <!--&ndash;&gt;-->
    <!--<resultMap id="OrdersAndOrderDetailResultMap" type="com.xzm.modules.test.po.Orders" extends="OrdersUserResultMap">-->
        <!--&lt;!&ndash; 订单信息 &ndash;&gt;-->
        <!--&lt;!&ndash; 用户信息 &ndash;&gt;-->
        <!--&lt;!&ndash; 使用extends继承，不用在中配置订单信息和用户信息的映射 &ndash;&gt;-->


        <!--&lt;!&ndash; 订单明细信息-->
        <!--一个订单关联查询出了多条明细，要使用collection进行映射-->
        <!--collection：对关联查询到多条记录映射到集合对象中-->
        <!--property：将关联查询到多条记录映射到cn.zhisheng.mybatis.po.Orders哪个属性-->
        <!--ofType：指定映射到list集合属性中pojo的类型-->
         <!--&ndash;&gt;-->
        <!--<collection property="orderdetails" ofType="com.xzm.modules.test.po.Orderdetail">-->
            <!--&lt;!&ndash; id：订单明细唯 一标识-->
            <!--property:要将订单明细的唯 一标识 映射到cn.zhisheng.mybatis.po.Orderdetail的哪个属性-->
              <!--&ndash;&gt;-->
            <!--<id column="orderdetail_id" property="id"/>-->
            <!--<result column="items_id" property="itemsId"/>-->
            <!--<result column="items_num" property="itemsNum"/>-->
            <!--<result column="orders_id" property="ordersId"/>-->
        <!--</collection>-->

    <!--</resultMap>-->

    <!--&lt;!&ndash;定义查询用户及用户购买商品信息的 resultMap&ndash;&gt;-->
    <!--<resultMap id="UserAndItemsResultMap" type="com.xzm.modules.test.po.User">-->
        <!--&lt;!&ndash;用户信息&ndash;&gt;-->
        <!--<id column="user_id" property="id"/>-->
        <!--<result column="username" property="username"/>-->
        <!--<result column="sex" property="sex"/>-->
        <!--<result column="birthday" property="birthday"/>-->
        <!--<result column="address" property="address"/>-->

        <!--&lt;!&ndash;订单信息-->
		    <!--一个用户对应多个订单，使用collection映射-->
		<!--&ndash;&gt;-->
        <!--<collection property="ordersList" ofType="com.xzm.modules.test.po.Orders">-->
            <!--<id column="id" property="id"/>-->
            <!--<result column="user_id" property="userId"/>-->
            <!--<result column="number" property="number"/>-->
            <!--<result column="createtime" property="createtime"/>-->
            <!--<result column="note" property="note"/>-->

            <!--&lt;!&ndash; 订单明细-->
		        <!--一个订单包括 多个明细-->
		    <!--&ndash;&gt;-->
            <!--<collection property="orderdetails" ofType="com.xzm.modules.test.po.Orderdetail">-->

                <!--<id column="orderdetail_id" property="id"/>-->
                <!--<result column="orders_id" property="ordersId"/>-->
                <!--<result column="items_id" property="itemsId"/>-->
                <!--<result column="items_num" property="itemsNum"/>-->

                <!--&lt;!&ndash; 商品信息-->
                     <!--一个订单明细对应一个商品-->
                <!--&ndash;&gt;-->
                <!--<association property="items" javaType="com.xzm.modules.test.po.Items">-->
                    <!--<id column="items_id" property="id"/>-->
                    <!--<result column="items_name" property="name"/>-->
                    <!--<result column="items_price" property="price"/>-->
                    <!--<result column="items_pic" property="pic"/>-->
                    <!--<result column="items_createtime" property="createtime"/>-->
                    <!--<result column="items_detail" property="detail"/>-->
                 <!--</association>-->
            <!--</collection>-->
        <!--</collection>-->
    <!--</resultMap>-->

    <!--&lt;!&ndash;定义 关联用户信息（通过 association 延迟加载）的resultMap&ndash;&gt;-->
    <!--<resultMap id="OrdersUserLazyLoadingResultMap" type="com.xzm.modules.test.po.Orders">-->
        <!--&lt;!&ndash;对订单信息映射&ndash;&gt;-->
        <!--<id column="id" property="id"/>-->
        <!--<result column="user_id" property="userId"/>-->
        <!--<result column="number" property="number"/>-->
        <!--<result column="createtime" property="createtime"/>-->
        <!--<result column="note" property="note"/>-->

        <!--&lt;!&ndash; 实现对用户信息进行延迟加载-->
			<!--select：指定延迟加载需要执行的statement的id（是根据user_id查询用户信息的statement）-->
			<!--要使用userMapper.xml中findUserById完成根据用户id(user_id)用户信息的查询，如果findUserById不在本mapper中需要前边加namespace-->
			<!--column：订单信息中关联用户信息查询的列，是user_id-->
			<!--关联查询的sql理解为：-->
			<!--SELECT orders.*,-->
	        <!--(SELECT username FROM USER WHERE orders.user_id = user.id)username,-->
	        <!--(SELECT sex FROM USER WHERE orders.user_id = user.id)sex-->
	        <!--FROM orders-->
		<!--&ndash;&gt;-->
        <!--<association property="user" javaType="com.xzm.modules.test.po.User" select="cn.zhisheng.mybatis.mapper.UserMapper.findUserById" column="user_id">-->

        <!--</association>-->
    <!--</resultMap>-->

    <!--&lt;!&ndash;查询订单关联查询用户信息&ndash;&gt;-->
    <!--<select id="findOrdersUser" resultType="com.xzm.modules.test.po.OrdersCustom">-->
        <!--select orders.*, user.username, user.sex, user.address from orders, user where orders.user_id = user.id-->
    <!--</select>-->

    <!--&lt;!&ndash;查询订单关联查询用户信息, 使用 resultMap&ndash;&gt;-->
    <!--<select id="findOrdersUserResultMap" resultMap="OrdersUserResultMap">-->
        <!--SELECT orders.*, user.username, user.sex, user.address from orders, user where orders.user_id = user.id-->
    <!--</select>-->


    <!--&lt;!&ndash;查询订单及订单明细信息, 使用 resultMap&ndash;&gt;-->
    <!--<select id="findOrdersAndOrderDetailResultMap" resultMap="OrdersAndOrderDetailResultMap">-->
        <!--select orders.*, user.username, user.sex, user.address, orderdetail.id orderdetail_id, orderdetail.items_id, orderdetail.items_num, orderdetail.orders_id-->
        <!--from orders, user,orderdetail where orders.user_id = user.id and orderdetail.orders_id=orders.id-->
    <!--</select>-->

    <!--&lt;!&ndash;查询用户及用户购买商品信息, 使用 resultMap&ndash;&gt;-->
    <!--<select id="findUserAndItemsResultMap" resultMap="UserAndItemsResultMap">-->
        <!--select orders.*, user.username, user.sex, user.address, orderdetail.id orderdetail_id, orderdetail.items_id, orderdetail.items_num, orderdetail.orders_id-->
        <!--from orders, user,orderdetail where orders.user_id = user.id and orderdetail.orders_id=orders.id-->
    <!--</select>-->

    <!--&lt;!&ndash;查询订单并且关联查询用户信息，关联用户信息需要通过 association 延迟加载&ndash;&gt;-->
    <!--<select id="findOrdersUserLazyLoading" resultMap="OrdersUserLazyLoadingResultMap">-->
        <!--select * from orders-->
    <!--</select>-->


</mapper>
